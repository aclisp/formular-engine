package formular.engine;

import formular.engine.function.Add;
import formular.engine.function.And;
import formular.engine.function.Append;
import formular.engine.function.Apply;
import formular.engine.function.Car;
import formular.engine.function.Cdr;
import formular.engine.function.Concat;
import formular.engine.function.Cons;
import formular.engine.function.Contains;
import formular.engine.function.Divide;
import formular.engine.function.Equal;
import formular.engine.function.Eval;
import formular.engine.function.Filter;
import formular.engine.function.Format;
import formular.engine.function.GetField;
import formular.engine.function.GreaterThan;
import formular.engine.function.GreaterOrEqual;
import formular.engine.function.Is;
import formular.engine.function.JsonParse;
import formular.engine.function.JsonPointer;
import formular.engine.function.JsonStringify;
import formular.engine.function.Length;
import formular.engine.function.LessThan;
import formular.engine.function.LessOrEqual;
import formular.engine.function.List;
import formular.engine.function.MakeHashTable;
import formular.engine.function.Map;
import formular.engine.function.Minus;
import formular.engine.function.Multiply;
import formular.engine.function.Not;
import formular.engine.function.NotEqual;
import formular.engine.function.Nth;
import formular.engine.function.Or;
import formular.engine.function.Reduce;
import formular.engine.function.Remainder;
import formular.engine.function.SetField;

public class Default {
    private static final Add Add = new Add();
    private static final Minus Minus = new Minus();
    private static final Multiply Multiply = new Multiply();
    private static final Divide Divide = new Divide();
    private static final Remainder Remainder = new Remainder();
    private static final LessThan LessThan = new LessThan();
    private static final GreaterThan GreaterThan = new GreaterThan();
    private static final LessOrEqual LessOrEqual = new LessOrEqual();
    private static final GreaterOrEqual GreaterOrEqual = new GreaterOrEqual();
    private static final Is Is = new Is();
    private static final Equal Equal = new Equal();
    private static final NotEqual NotEqual = new NotEqual();
    private static final Car Car = new Car();
    private static final Cdr Cdr = new Cdr();
    private static final Cons Cons = new Cons();
    private static final Append Append = new Append();
    private static final Length Length = new Length();
    private static final Contains Contains = new Contains();
    private static final List List = new List();
    private static final Map Map = new Map();
    private static final Reduce Reduce = new Reduce();
    private static final Filter Filter = new Filter();
    private static final Nth Nth = new Nth();
    private static final Apply Apply = new Apply();
    private static final Format Format = new Format();
    private static final Concat Concat = new Concat();
    private static final Not Not = new Not();
    private static final And And = new And();
    private static final Or Or = new Or();
    private static final JsonParse JsonParse = new JsonParse();
    private static final JsonPointer JsonPointer = new JsonPointer();
    private static final JsonStringify JsonStringify = new JsonStringify();
    private static final MakeHashTable MakeHashTable = new MakeHashTable();
    private static final GetField GetField = new GetField();
    private static final SetField SetField = new SetField();

    public static Environment environment() {
        final Environment environment = new Environment();
        environment.put(Symbol.of("eval"), new Eval(environment, null, 0));
        environment.put(Symbol.of("+"), Add);
        environment.put(Symbol.of("-"), Minus);
        environment.put(Symbol.of("*"), Multiply);
        environment.put(Symbol.of("/"), Divide);
        environment.put(Symbol.of("%"), Remainder);
        environment.put(Symbol.of("<"), LessThan);
        environment.put(Symbol.of(">"), GreaterThan);
        environment.put(Symbol.of("<="), LessOrEqual);
        environment.put(Symbol.of(">="), GreaterOrEqual);
        environment.put(Symbol.of("is"), Is);
        environment.put(Symbol.of("eq"), Equal);
        environment.put(Symbol.of("neq"), NotEqual);
        environment.put(Symbol.of("car"), Car);
        environment.put(Symbol.of("cdr"), Cdr);
        environment.put(Symbol.of("cons"), Cons);
        environment.put(Symbol.of("append"), Append);
        environment.put(Symbol.of("length"), Length);
        environment.put(Symbol.of("contains"), Contains);
        environment.put(Symbol.of("list"), List);
        environment.put(Symbol.of("map"), Map);
        environment.put(Symbol.of("reduce"), Reduce);
        environment.put(Symbol.of("filter"), Filter);
        environment.put(Symbol.of("nth"), Nth);
        environment.put(Symbol.of("apply"), Apply);
        environment.put(Symbol.of("format"), Format);
        environment.put(Symbol.of("concat"), Concat);
        environment.put(Symbol.of("not"), Not);
        environment.put(Symbol.of("and"), And);
        environment.put(Symbol.of("or"), Or);
        environment.put(Symbol.of("json-parse"), JsonParse);
        environment.put(Symbol.of("json-ptr"), JsonPointer);
        environment.put(Symbol.of("json-stringify"), JsonStringify);
        environment.put(Symbol.of("make-hash-table"), MakeHashTable);
        environment.put(Symbol.of("getf"), GetField);
        environment.put(Symbol.of("setf"), SetField);
        environment.alias(Symbol.of("eq"), Symbol.of("="));
        environment.alias(Symbol.of("eq"), Symbol.of("=="));
        environment.alias(Symbol.of("eq"), Symbol.of("equal"));
        environment.alias(Symbol.of("neq"), Symbol.of("!="));
        environment.alias(Symbol.of("neq"), Symbol.of("<>"));
        environment.alias(Symbol.of("+"), Symbol.of("加"));
        environment.alias(Symbol.of("-"), Symbol.of("减"));
        environment.alias(Symbol.of("*"), Symbol.of("乘"));
        environment.alias(Symbol.of("/"), Symbol.of("除"));
        environment.alias(Symbol.of("%"), Symbol.of("余数"));
        environment.alias(Symbol.of("<"), Symbol.of("小于"));
        environment.alias(Symbol.of(">"), Symbol.of("大于"));
        environment.alias(Symbol.of("<="), Symbol.of("小于或等于"));
        environment.alias(Symbol.of("<="), Symbol.of("不大于"));
        environment.alias(Symbol.of(">="), Symbol.of("大于或等于"));
        environment.alias(Symbol.of(">="), Symbol.of("不小于"));
        environment.alias(Symbol.of("and"), Symbol.of("并且"));
        environment.alias(Symbol.of("or"), Symbol.of("或者"));
        environment.alias(Symbol.of("not"), Symbol.of("否定"));
        environment.alias(Symbol.of("contains"), Symbol.of("包含"));
        environment.alias(Symbol.of("length"), Symbol.of("计数"));
        environment.alias(Symbol.of("setf"), Symbol.of("设置字段"));
        environment.alias(Symbol.of("getf"), Symbol.of("获取字段"));
        return environment;
    }
}
